/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cssd_assignment_3;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sam
 */
public class StationTerminalForm extends javax.swing.JFrame {


    // added from POS, we've only implemented one type of ConsumerUserInterface.
    private final String machineID = "0";
    private final Location location = new Location("Sheffield","1",0,0);
    
    // refund a users cash.
    private void refundCash() {
        credits = 0;
    }

    // enter cash for a user.
    public void enterCash(double cash) {
        credits += cash;
    }
    
    //private JPanel cards = new JPanel();
    
    private ButtonGroup langRadios = new ButtonGroup(); // button groups- ensures only one of the radio dials can be selected at a time
    private ButtonGroup travelRadios = new ButtonGroup();
    private ButtonGroup paymentRadios = new ButtonGroup();
    
    String language = "english";
    PromotionalCoupon coupon;
    List<Route> routes;
    RouteController controller = new RouteController();
    FaresStructures fares = new FaresStructures();
    String couponID;
    double credits;
    double travelCost;
    Location destination;
    Route routeToUse;
    /**
     * Creates new form StationTerminalForm
     */
    public StationTerminalForm() {
        initComponents();
        
        langRadios.add(jRadioEnglish);
        langRadios.add(jRadioFrench);
        langRadios.add(jRadioGerman);
        travelRadios.add(jRadioOneWay);
        travelRadios.add(jRadioReturn);
        travelRadios.add(jRadioOpenReturn);
        paymentRadios.add(radioCash);
        paymentRadios.add(radioCard);
        
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "home");
        routes = controller.getRoutes(location, location); // Passing the same location into both variables gets all avaliable routes from that location
        jListDestinations.setListData(routes.toArray());
        coupon = new PromotionalCoupon("HZCPN",(new Date(Long.MAX_VALUE)),0.50,routes); // example coupon- CODE: "HZCPN"
        
        Timer timer = new Timer(); // automatically updates the time in the bottom left of the UI
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                String string = new SimpleDateFormat("HH:mm:ss").format(new Date());
                timeLabel.setText(string);
            }
        }, 0, 1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        languagePanel = new javax.swing.JPanel();
        jRadioEnglish = new javax.swing.JRadioButton();
        jRadioFrench = new javax.swing.JRadioButton();
        jRadioGerman = new javax.swing.JRadioButton();
        loadLangButton = new javax.swing.JButton();
        searchResultsPanel = new javax.swing.JPanel();
        resultsPanel2 = new javax.swing.JPanel();
        rpanelPrice2 = new javax.swing.JLabel();
        rpanelReturn2 = new javax.swing.JLabel();
        rpanelDepart2 = new javax.swing.JLabel();
        rpanelDestination2 = new javax.swing.JLabel();
        resultsPanel4 = new javax.swing.JPanel();
        rpanelPrice4 = new javax.swing.JLabel();
        rpanelReturn4 = new javax.swing.JLabel();
        rpanelDepart4 = new javax.swing.JLabel();
        rpanelDestination4 = new javax.swing.JLabel();
        resultsPanel1 = new javax.swing.JPanel();
        rpanelDestination1 = new javax.swing.JLabel();
        rpanelDepart1 = new javax.swing.JLabel();
        rpanelPrice1 = new javax.swing.JLabel();
        rpanelReturn1 = new javax.swing.JLabel();
        resultsPanel3 = new javax.swing.JPanel();
        rpanelPrice3 = new javax.swing.JLabel();
        rpanelReturn3 = new javax.swing.JLabel();
        rpanelDepart3 = new javax.swing.JLabel();
        rpanelDestination3 = new javax.swing.JLabel();
        resultsPanel5 = new javax.swing.JPanel();
        rpanelPrice5 = new javax.swing.JLabel();
        rpanelReturn5 = new javax.swing.JLabel();
        rpanelDepart5 = new javax.swing.JLabel();
        rpanelDestination5 = new javax.swing.JLabel();
        resultsPanel6 = new javax.swing.JPanel();
        rpanelPrice6 = new javax.swing.JLabel();
        rpanelReturn6 = new javax.swing.JLabel();
        rpanelDepart6 = new javax.swing.JLabel();
        rpanelDestination6 = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jRadioReturn = new javax.swing.JRadioButton();
        jRadioOneWay = new javax.swing.JRadioButton();
        jRadioOpenReturn = new javax.swing.JRadioButton();
        destinationLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jDepartureDate = new org.jdesktop.swingx.JXDatePicker();
        jReturnDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        depHour = new javax.swing.JTextField();
        depMinute = new javax.swing.JTextField();
        retHour = new javax.swing.JTextField();
        retMinute = new javax.swing.JTextField();
        confirmBookingPanel = new javax.swing.JPanel();
        bookingStation = new javax.swing.JLabel();
        bookingDepartureDate = new javax.swing.JLabel();
        bookingReturnDate = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        confirmTicketType = new javax.swing.JLabel();
        bookingPrice = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        radioCash = new javax.swing.JRadioButton();
        radioCard = new javax.swing.JRadioButton();
        couponTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        bookingAdvance = new javax.swing.JButton();
        couponInvalidPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        cardPaymentPanel = new javax.swing.JPanel();
        cardReturnDay = new javax.swing.JLabel();
        cardStation = new javax.swing.JLabel();
        cardDepartureDay = new javax.swing.JLabel();
        cardPrice = new javax.swing.JLabel();
        cardTicketType = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        cardName = new javax.swing.JTextField();
        cardNumber = new javax.swing.JTextField();
        cardSecurityCode = new javax.swing.JTextField();
        cardConfirmButton = new javax.swing.JButton();
        cashPaymentPanel = new javax.swing.JPanel();
        cashReturnDay = new javax.swing.JLabel();
        cashStation = new javax.swing.JLabel();
        cashDepartureDay = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        cashTicketType = new javax.swing.JLabel();
        cashPrice = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        cashInserted = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        cashReturnButton = new javax.swing.JButton();
        cashFivePounds = new javax.swing.JButton();
        cashTwoPounds = new javax.swing.JButton();
        cashOnePound = new javax.swing.JButton();
        cashFiftyPence = new javax.swing.JButton();
        timetablePanel = new javax.swing.JPanel();
        platformPanel = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        destinationPanel = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        expecedPanel = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        viewTicketsPanel = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        duePanel = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        exampleViewButton = new javax.swing.JButton();
        destinationScrollPane = new javax.swing.JScrollPane();
        destinationTextPane = new javax.swing.JTextPane();
        platformScrollPane = new javax.swing.JScrollPane();
        platformTextPane = new javax.swing.JTextPane();
        dueScrollPane = new javax.swing.JScrollPane();
        dueTextPane = new javax.swing.JTextPane();
        expectedScrollPane = new javax.swing.JScrollPane();
        expectedTextPane = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        homePanel = new javax.swing.JPanel();
        jScrollDestinations = new javax.swing.JScrollPane();
        jListDestinations = new javax.swing.JList();
        homeAvailRoutes = new javax.swing.JLabel();
        homeSelectDestination = new javax.swing.JButton();
        homeStopsAt = new javax.swing.JLabel();
        jScrollVia = new javax.swing.JScrollPane();
        jListVia = new javax.swing.JList();
        homeSheff1 = new javax.swing.JLabel();
        homeSheff2 = new javax.swing.JLabel();
        paymentSuccesfulPanel = new javax.swing.JPanel();
        paymentReturnDate = new javax.swing.JLabel();
        paymentStation = new javax.swing.JLabel();
        paymentDepartureDate = new javax.swing.JLabel();
        printTicketButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        homeButtonPanel = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        optionPanel = new javax.swing.JPanel();
        languageButton = new javax.swing.JButton();
        timetableButton = new javax.swing.JButton();
        timePanel = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        spacerPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainPanel.setPreferredSize(new java.awt.Dimension(688, 517));
        mainPanel.setLayout(new java.awt.CardLayout());

        languagePanel.setPreferredSize(new java.awt.Dimension(688, 517));

        jRadioEnglish.setSelected(true);
        jRadioEnglish.setText("English");

        jRadioFrench.setText("French");

        jRadioGerman.setText("German");

        loadLangButton.setText("Load Language");
        loadLangButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadLangButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout languagePanelLayout = new javax.swing.GroupLayout(languagePanel);
        languagePanel.setLayout(languagePanelLayout);
        languagePanelLayout.setHorizontalGroup(
            languagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(languagePanelLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(languagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioGerman)
                    .addComponent(jRadioFrench)
                    .addComponent(jRadioEnglish))
                .addContainerGap(504, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, languagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loadLangButton)
                .addContainerGap())
        );
        languagePanelLayout.setVerticalGroup(
            languagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(languagePanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jRadioEnglish)
                .addGap(18, 18, 18)
                .addComponent(jRadioFrench)
                .addGap(18, 18, 18)
                .addComponent(jRadioGerman)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(loadLangButton)
                .addContainerGap())
        );

        mainPanel.add(languagePanel, "language");

        searchResultsPanel.setPreferredSize(new java.awt.Dimension(688, 517));

        resultsPanel2.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel2MouseClicked(evt);
            }
        });

        rpanelPrice2.setText("Price");

        rpanelReturn2.setText("Return Date/Time");

        rpanelDepart2.setText("Departure Date/Time");

        rpanelDestination2.setText("Destination");

        javax.swing.GroupLayout resultsPanel2Layout = new javax.swing.GroupLayout(resultsPanel2);
        resultsPanel2.setLayout(resultsPanel2Layout);
        resultsPanel2Layout.setHorizontalGroup(
            resultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel2Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(resultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel2Layout.createSequentialGroup()
                        .addComponent(rpanelDestination2)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel2Layout.createSequentialGroup()
                        .addComponent(rpanelPrice2)
                        .addContainerGap())))
            .addGroup(resultsPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(resultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpanelReturn2)
                    .addComponent(rpanelDepart2))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultsPanel2Layout.setVerticalGroup(
            resultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice2)
                .addContainerGap())
        );

        resultsPanel4.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel4MouseClicked(evt);
            }
        });

        rpanelPrice4.setText("Price");

        rpanelReturn4.setText("Return Date/Time");

        rpanelDepart4.setText("Departure Date/Time");

        rpanelDestination4.setText("Destination");

        javax.swing.GroupLayout resultsPanel4Layout = new javax.swing.GroupLayout(resultsPanel4);
        resultsPanel4.setLayout(resultsPanel4Layout);
        resultsPanel4Layout.setHorizontalGroup(
            resultsPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel4Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(resultsPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel4Layout.createSequentialGroup()
                        .addComponent(rpanelDestination4)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel4Layout.createSequentialGroup()
                        .addComponent(rpanelPrice4)
                        .addContainerGap())))
            .addGroup(resultsPanel4Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(resultsPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpanelReturn4)
                    .addComponent(rpanelDepart4))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultsPanel4Layout.setVerticalGroup(
            resultsPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice4)
                .addContainerGap())
        );

        resultsPanel1.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel1MouseClicked(evt);
            }
        });

        rpanelDestination1.setText("Destination");

        rpanelDepart1.setText("Departure Date/Time");

        rpanelPrice1.setText("Price");

        rpanelReturn1.setText("Return Date/Time");

        javax.swing.GroupLayout resultsPanel1Layout = new javax.swing.GroupLayout(resultsPanel1);
        resultsPanel1.setLayout(resultsPanel1Layout);
        resultsPanel1Layout.setHorizontalGroup(
            resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel1Layout.createSequentialGroup()
                        .addComponent(rpanelDestination1)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel1Layout.createSequentialGroup()
                        .addComponent(rpanelPrice1)
                        .addContainerGap())))
            .addGroup(resultsPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpanelReturn1)
                    .addComponent(rpanelDepart1))
                .addGap(0, 75, Short.MAX_VALUE))
        );
        resultsPanel1Layout.setVerticalGroup(
            resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice1)
                .addContainerGap())
        );

        resultsPanel3.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel3MouseClicked(evt);
            }
        });

        rpanelPrice3.setText("Price");

        rpanelReturn3.setText("Return Date/Time");

        rpanelDepart3.setText("Departure Date/Time");

        rpanelDestination3.setText("Destination");

        javax.swing.GroupLayout resultsPanel3Layout = new javax.swing.GroupLayout(resultsPanel3);
        resultsPanel3.setLayout(resultsPanel3Layout);
        resultsPanel3Layout.setHorizontalGroup(
            resultsPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel3Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(resultsPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel3Layout.createSequentialGroup()
                        .addComponent(rpanelDestination3)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel3Layout.createSequentialGroup()
                        .addComponent(rpanelPrice3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel3Layout.createSequentialGroup()
                        .addGroup(resultsPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rpanelReturn3)
                            .addComponent(rpanelDepart3))
                        .addGap(71, 71, 71))))
        );
        resultsPanel3Layout.setVerticalGroup(
            resultsPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice3)
                .addContainerGap())
        );

        resultsPanel5.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel5MouseClicked(evt);
            }
        });

        rpanelPrice5.setText("Price");

        rpanelReturn5.setText("Return Date/Time");

        rpanelDepart5.setText("Departure Date/Time");

        rpanelDestination5.setText("Destination");

        javax.swing.GroupLayout resultsPanel5Layout = new javax.swing.GroupLayout(resultsPanel5);
        resultsPanel5.setLayout(resultsPanel5Layout);
        resultsPanel5Layout.setHorizontalGroup(
            resultsPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel5Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(resultsPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel5Layout.createSequentialGroup()
                        .addComponent(rpanelDestination5)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel5Layout.createSequentialGroup()
                        .addComponent(rpanelPrice5)
                        .addContainerGap())))
            .addGroup(resultsPanel5Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(resultsPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpanelReturn5)
                    .addComponent(rpanelDepart5))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultsPanel5Layout.setVerticalGroup(
            resultsPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice5)
                .addContainerGap())
        );

        resultsPanel6.setBackground(new java.awt.Color(204, 204, 204));
        resultsPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsPanel6MouseClicked(evt);
            }
        });

        rpanelPrice6.setText("Price");

        rpanelReturn6.setText("Return Date/Time");

        rpanelDepart6.setText("Departure Date/Time");

        rpanelDestination6.setText("Destination");

        javax.swing.GroupLayout resultsPanel6Layout = new javax.swing.GroupLayout(resultsPanel6);
        resultsPanel6.setLayout(resultsPanel6Layout);
        resultsPanel6Layout.setHorizontalGroup(
            resultsPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel6Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(resultsPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel6Layout.createSequentialGroup()
                        .addComponent(rpanelDestination6)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel6Layout.createSequentialGroup()
                        .addComponent(rpanelPrice6)
                        .addContainerGap())))
            .addGroup(resultsPanel6Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(resultsPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpanelReturn6)
                    .addComponent(rpanelDepart6))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultsPanel6Layout.setVerticalGroup(
            resultsPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpanelDestination6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelDepart6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpanelReturn6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rpanelPrice6)
                .addContainerGap())
        );

        javax.swing.GroupLayout searchResultsPanelLayout = new javax.swing.GroupLayout(searchResultsPanel);
        searchResultsPanel.setLayout(searchResultsPanelLayout);
        searchResultsPanelLayout.setHorizontalGroup(
            searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchResultsPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );
        searchResultsPanelLayout.setVerticalGroup(
            searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchResultsPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        mainPanel.add(searchResultsPanel, "searchResults");

        searchPanel.setPreferredSize(new java.awt.Dimension(688, 517));

        jLabel4.setText("Departure Date");

        jLabel11.setText("Return Date");

        jRadioReturn.setText("Return");
        jRadioReturn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioReturnStateChanged(evt);
            }
        });
        jRadioReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioReturnActionPerformed(evt);
            }
        });

        jRadioOneWay.setSelected(true);
        jRadioOneWay.setText("One Way");

        jRadioOpenReturn.setText("Open Return");

        destinationLabel.setText("#Destination");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jReturnDate.setEnabled(false);

        jLabel2.setText("Departure Time");

        jLabel12.setText("Return Time");

        depHour.setText("HH");
        depHour.setMaximumSize(new java.awt.Dimension(6, 20));

        depMinute.setText("MM");
        depMinute.setMaximumSize(new java.awt.Dimension(6, 20));

        retHour.setText("HH");
        retHour.setEnabled(false);
        retHour.setMaximumSize(new java.awt.Dimension(6, 20));

        retMinute.setText("MM");
        retMinute.setEnabled(false);
        retMinute.setMaximumSize(new java.awt.Dimension(6, 20));

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(destinationLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(91, 91, 91))
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(183, 183, 183))
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioOneWay)
                    .addComponent(jRadioReturn)
                    .addComponent(jRadioOpenReturn)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(depHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(depMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(jReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(retHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(retMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12))
                        .addGap(181, 181, 181))))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(destinationLabel)
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(retHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(retMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(depHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(depMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jRadioOneWay)
                .addGap(18, 18, 18)
                .addComponent(jRadioReturn)
                .addGap(18, 18, 18)
                .addComponent(jRadioOpenReturn)
                .addGap(63, 63, 63)
                .addComponent(searchButton)
                .addGap(79, 79, 79))
        );

        mainPanel.add(searchPanel, "search");

        confirmBookingPanel.setPreferredSize(new java.awt.Dimension(690, 517));

        bookingStation.setText("Station - Destination");

        bookingDepartureDate.setText("Departure Day/Time");

        bookingReturnDate.setText("Return Day/Time");

        jLabel14.setText("Payment Information");

        confirmTicketType.setText("Ticket Type");

        bookingPrice.setText("Price");

        jLabel16.setText("Payment Method:");

        radioCash.setText("Cash");

        radioCard.setText("Card");

        couponTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                couponTextFieldActionPerformed(evt);
            }
        });

        jLabel17.setText("Coupon Code");

        bookingAdvance.setText("Advance");
        bookingAdvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingAdvanceActionPerformed(evt);
            }
        });

        couponInvalidPanel.setBackground(new java.awt.Color(255, 52, 52));
        couponInvalidPanel.setEnabled(false);

        jLabel18.setText("Coupon Code Invalid!");

        javax.swing.GroupLayout couponInvalidPanelLayout = new javax.swing.GroupLayout(couponInvalidPanel);
        couponInvalidPanel.setLayout(couponInvalidPanelLayout);
        couponInvalidPanelLayout.setHorizontalGroup(
            couponInvalidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(couponInvalidPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel18)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        couponInvalidPanelLayout.setVerticalGroup(
            couponInvalidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(couponInvalidPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout confirmBookingPanelLayout = new javax.swing.GroupLayout(confirmBookingPanel);
        confirmBookingPanel.setLayout(confirmBookingPanelLayout);
        confirmBookingPanelLayout.setHorizontalGroup(
            confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(bookingStation))
                    .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                        .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, confirmBookingPanelLayout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(bookingDepartureDate))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, confirmBookingPanelLayout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                                            .addComponent(confirmTicketType)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bookingPrice))))))
                        .addGap(126, 126, 126)
                        .addComponent(bookingReturnDate))
                    .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioCard)
                            .addComponent(radioCash)))
                    .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(couponTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(couponInvalidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(165, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmBookingPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bookingAdvance)
                .addGap(79, 79, 79))
        );
        confirmBookingPanelLayout.setVerticalGroup(
            confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmBookingPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(bookingStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingDepartureDate)
                    .addComponent(bookingReturnDate))
                .addGap(60, 60, 60)
                .addComponent(jLabel14)
                .addGap(27, 27, 27)
                .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmTicketType)
                    .addComponent(bookingPrice))
                .addGap(28, 28, 28)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioCash)
                .addGap(18, 18, 18)
                .addComponent(radioCard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(confirmBookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmBookingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(couponTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(couponInvalidPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bookingAdvance)
                .addGap(43, 43, 43))
        );

        mainPanel.add(confirmBookingPanel, "confirmBook");

        cardPaymentPanel.setPreferredSize(new java.awt.Dimension(690, 517));

        cardReturnDay.setText("Return Day/Time");

        cardStation.setText("Station - Destination");

        cardDepartureDay.setText("Departure Day/Time");

        cardPrice.setText("PRICE");

        cardTicketType.setText("Ticket Type");

        jLabel43.setText("Payment Information");

        jLabel37.setText("Card Name");

        jLabel44.setText("Card Number");

        jLabel45.setText("Security Code");

        cardSecurityCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardSecurityCodeActionPerformed(evt);
            }
        });

        cardConfirmButton.setText("Confirm Payment");
        cardConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardConfirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardPaymentPanelLayout = new javax.swing.GroupLayout(cardPaymentPanel);
        cardPaymentPanel.setLayout(cardPaymentPanelLayout);
        cardPaymentPanelLayout.setHorizontalGroup(
            cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPaymentPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addGroup(cardPaymentPanelLayout.createSequentialGroup()
                        .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardTicketType)
                            .addComponent(jLabel37)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45))
                        .addGap(64, 64, 64)
                        .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cardPrice)
                            .addComponent(cardName, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(cardNumber)
                            .addComponent(cardSecurityCode))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPaymentPanelLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPaymentPanelLayout.createSequentialGroup()
                        .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cardPaymentPanelLayout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(cardStation))
                            .addGroup(cardPaymentPanelLayout.createSequentialGroup()
                                .addComponent(cardDepartureDay)
                                .addGap(126, 126, 126)
                                .addComponent(cardReturnDay)))
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPaymentPanelLayout.createSequentialGroup()
                        .addComponent(cardConfirmButton)
                        .addGap(84, 84, 84))))
        );
        cardPaymentPanelLayout.setVerticalGroup(
            cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPaymentPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(cardStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardDepartureDay)
                    .addComponent(cardReturnDay))
                .addGap(117, 117, 117)
                .addComponent(jLabel43)
                .addGap(18, 18, 18)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardTicketType)
                    .addComponent(cardPrice))
                .addGap(35, 35, 35)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(cardName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(cardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(cardPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(cardSecurityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(cardConfirmButton)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        mainPanel.add(cardPaymentPanel, "card");

        cashPaymentPanel.setPreferredSize(new java.awt.Dimension(690, 517));

        cashReturnDay.setText("Return Day/Time");

        cashStation.setText("Station - Destination");

        cashDepartureDay.setText("Departure Day/Time");

        jLabel33.setText("Payment Information");

        cashTicketType.setText("Ticket Type");

        cashPrice.setText("PRICE");

        jLabel46.setText("Cash Insterted");

        cashInserted.setText("VALUE");

        jPanel5.setBackground(new java.awt.Color(87, 249, 87));

        jLabel19.setText("Enter the appropriate ammount of cash into the machine");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel19)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cashReturnButton.setText("Return Change");
        cashReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashReturnButtonActionPerformed(evt);
            }
        });

        cashFivePounds.setText("Add 5 Pounds");
        cashFivePounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFivePoundsActionPerformed(evt);
            }
        });

        cashTwoPounds.setText("Add 2 Pounds");
        cashTwoPounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashTwoPoundsActionPerformed(evt);
            }
        });

        cashOnePound.setText("Add 1 Pound");
        cashOnePound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashOnePoundActionPerformed(evt);
            }
        });

        cashFiftyPence.setText("Add 50 Pence");
        cashFiftyPence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFiftyPenceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cashPaymentPanelLayout = new javax.swing.GroupLayout(cashPaymentPanel);
        cashPaymentPanel.setLayout(cashPaymentPanelLayout);
        cashPaymentPanelLayout.setHorizontalGroup(
            cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashPaymentPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addGroup(cashPaymentPanelLayout.createSequentialGroup()
                        .addComponent(cashTicketType)
                        .addGap(76, 76, 76)
                        .addComponent(cashPrice))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashPaymentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addGap(59, 59, 59)
                        .addComponent(cashInserted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cashFiftyPence, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(cashOnePound, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashPaymentPanelLayout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashPaymentPanelLayout.createSequentialGroup()
                        .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(cashPaymentPanelLayout.createSequentialGroup()
                                    .addGap(87, 87, 87)
                                    .addComponent(cashStation))
                                .addGroup(cashPaymentPanelLayout.createSequentialGroup()
                                    .addComponent(cashDepartureDay)
                                    .addGap(126, 126, 126)
                                    .addComponent(cashReturnDay))))
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashPaymentPanelLayout.createSequentialGroup()
                        .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cashReturnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(cashFivePounds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cashTwoPounds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        cashPaymentPanelLayout.setVerticalGroup(
            cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashPaymentPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(cashStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashDepartureDay)
                    .addComponent(cashReturnDay))
                .addGap(31, 31, 31)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel33)
                .addGap(18, 18, 18)
                .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashTicketType)
                    .addComponent(cashPrice)
                    .addComponent(cashFivePounds))
                .addGap(15, 15, 15)
                .addComponent(cashTwoPounds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cashPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(cashInserted)
                    .addComponent(cashOnePound))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cashFiftyPence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(cashReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(cashPaymentPanel, "cash");

        timetablePanel.setPreferredSize(new java.awt.Dimension(688, 517));

        jLabel47.setText("Platform");

        javax.swing.GroupLayout platformPanelLayout = new javax.swing.GroupLayout(platformPanel);
        platformPanel.setLayout(platformPanelLayout);
        platformPanelLayout.setHorizontalGroup(
            platformPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, platformPanelLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jLabel47)
                .addGap(47, 47, 47))
        );
        platformPanelLayout.setVerticalGroup(
            platformPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, platformPanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel47)
                .addGap(41, 41, 41))
        );

        jLabel48.setText("Destination");

        javax.swing.GroupLayout destinationPanelLayout = new javax.swing.GroupLayout(destinationPanel);
        destinationPanel.setLayout(destinationPanelLayout);
        destinationPanelLayout.setHorizontalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel48)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        destinationPanelLayout.setVerticalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel48)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel49.setText("Expected");

        javax.swing.GroupLayout expecedPanelLayout = new javax.swing.GroupLayout(expecedPanel);
        expecedPanel.setLayout(expecedPanelLayout);
        expecedPanelLayout.setHorizontalGroup(
            expecedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expecedPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel49)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        expecedPanelLayout.setVerticalGroup(
            expecedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, expecedPanelLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel49)
                .addGap(40, 40, 40))
        );

        jLabel50.setText("View Tickets");

        javax.swing.GroupLayout viewTicketsPanelLayout = new javax.swing.GroupLayout(viewTicketsPanel);
        viewTicketsPanel.setLayout(viewTicketsPanelLayout);
        viewTicketsPanelLayout.setHorizontalGroup(
            viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel50)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        viewTicketsPanelLayout.setVerticalGroup(
            viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel50)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel51.setText("Due");
        jLabel51.setToolTipText("");

        javax.swing.GroupLayout duePanelLayout = new javax.swing.GroupLayout(duePanel);
        duePanel.setLayout(duePanelLayout);
        duePanelLayout.setHorizontalGroup(
            duePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duePanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel51)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        duePanelLayout.setVerticalGroup(
            duePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duePanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel51)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        exampleViewButton.setText("Go To Tickets");

        destinationScrollPane.setViewportView(destinationTextPane);

        platformScrollPane.setViewportView(platformTextPane);

        dueScrollPane.setViewportView(dueTextPane);

        expectedScrollPane.setViewportView(expectedTextPane);

        jButton1.setText("Checkout Selected Route");

        javax.swing.GroupLayout timetablePanelLayout = new javax.swing.GroupLayout(timetablePanel);
        timetablePanel.setLayout(timetablePanelLayout);
        timetablePanelLayout.setHorizontalGroup(
            timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timetablePanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(destinationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(destinationScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(platformPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(platformScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(duePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dueScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(expecedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(expectedScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewTicketsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exampleViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        timetablePanelLayout.setVerticalGroup(
            timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timetablePanelLayout.createSequentialGroup()
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(platformPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expecedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewTicketsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timetablePanelLayout.createSequentialGroup()
                        .addComponent(exampleViewButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(timetablePanelLayout.createSequentialGroup()
                        .addGroup(timetablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationScrollPane)
                            .addComponent(platformScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(dueScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(expectedScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        mainPanel.add(timetablePanel, "timetable");

        homePanel.setPreferredSize(new java.awt.Dimension(690, 517));

        jListDestinations.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListDestinations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDestinationsValueChanged(evt);
            }
        });
        jScrollDestinations.setViewportView(jListDestinations);

        homeAvailRoutes.setText("Available Routes");

        homeSelectDestination.setText("Select Destination");
        homeSelectDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeSelectDestinationActionPerformed(evt);
            }
        });

        homeStopsAt.setText("Stops At:");

        jListVia.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListViaValueChanged(evt);
            }
        });
        jScrollVia.setViewportView(jListVia);

        homeSheff1.setText("Welcome to Sheffield Train Station");

        homeSheff2.setText("Please select a stop");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollDestinations, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeAvailRoutes))
                .addGap(35, 35, 35)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(jScrollVia, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeSelectDestination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(homePanelLayout.createSequentialGroup()
                                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(homeSheff1)
                                    .addComponent(homeSheff2))
                                .addGap(0, 35, Short.MAX_VALUE))))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(homeStopsAt)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeAvailRoutes)
                    .addComponent(homeStopsAt))
                .addGap(18, 18, 18)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(homeSheff1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeSheff2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeSelectDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollDestinations, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addComponent(jScrollVia))
                .addContainerGap())
        );

        mainPanel.add(homePanel, "home");

        paymentSuccesfulPanel.setPreferredSize(new java.awt.Dimension(690, 517));

        paymentReturnDate.setText("Return Day/Time");

        paymentStation.setText("Station - Destination");

        paymentDepartureDate.setText("Departure Day/Time");

        printTicketButton.setText("PRINT TICKET");
        printTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printTicketButtonActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(87, 249, 87));

        jLabel21.setText("PAYMENT SUCCESFUL");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel21)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout paymentSuccesfulPanelLayout = new javax.swing.GroupLayout(paymentSuccesfulPanel);
        paymentSuccesfulPanel.setLayout(paymentSuccesfulPanelLayout);
        paymentSuccesfulPanelLayout.setHorizontalGroup(
            paymentSuccesfulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentSuccesfulPanelLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addGroup(paymentSuccesfulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentSuccesfulPanelLayout.createSequentialGroup()
                        .addComponent(paymentDepartureDate)
                        .addGap(126, 126, 126)
                        .addComponent(paymentReturnDate))
                    .addGroup(paymentSuccesfulPanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(paymentSuccesfulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(printTicketButton)
                            .addComponent(paymentStation))))
                .addGap(191, 191, 191))
            .addGroup(paymentSuccesfulPanelLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentSuccesfulPanelLayout.setVerticalGroup(
            paymentSuccesfulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentSuccesfulPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(paymentStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paymentSuccesfulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentDepartureDate)
                    .addComponent(paymentReturnDate))
                .addGap(31, 31, 31)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(printTicketButton)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        mainPanel.add(paymentSuccesfulPanel, "paySucc");

        homeButtonPanel.setBackground(new java.awt.Color(184, 241, 184));
        homeButtonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        homeButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeButtonPanelMouseClicked(evt);
            }
        });

        homeLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        homeLabel.setText("Home");

        javax.swing.GroupLayout homeButtonPanelLayout = new javax.swing.GroupLayout(homeButtonPanel);
        homeButtonPanel.setLayout(homeButtonPanelLayout);
        homeButtonPanelLayout.setHorizontalGroup(
            homeButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeButtonPanelLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(homeLabel)
                .addGap(28, 28, 28))
        );
        homeButtonPanelLayout.setVerticalGroup(
            homeButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeButtonPanelLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(homeLabel)
                .addGap(28, 28, 28))
        );

        optionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        languageButton.setText("Language");
        languageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageButtonActionPerformed(evt);
            }
        });

        timetableButton.setText("Timetable");
        timetableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timetableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(languageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(timetableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(languageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(timetableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        timePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        timeLabel.setText("time");

        javax.swing.GroupLayout timePanelLayout = new javax.swing.GroupLayout(timePanel);
        timePanel.setLayout(timePanelLayout);
        timePanelLayout.setHorizontalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(timeLabel)
                .addContainerGap(72, Short.MAX_VALUE))
        );
        timePanelLayout.setVerticalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timePanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(timeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spacerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout spacerPanelLayout = new javax.swing.GroupLayout(spacerPanel);
        spacerPanel.setLayout(spacerPanelLayout);
        spacerPanelLayout.setHorizontalGroup(
            spacerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        spacerPanelLayout.setVerticalGroup(
            spacerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homeButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spacerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(homeButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spacerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonPanelMouseClicked
        CardLayout cl = (CardLayout)(mainPanel.getLayout()); // Returns to the homepage of the UI
        cl.show(mainPanel, "home");
        routes = controller.getRoutes(location, location);
        jListDestinations.setListData(routes.toArray());
    }//GEN-LAST:event_homeButtonPanelMouseClicked

    private void languageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageButtonActionPerformed
        CardLayout cl = (CardLayout)(mainPanel.getLayout()); // navigate to language panel
        cl.show(mainPanel, "language");
    }//GEN-LAST:event_languageButtonActionPerformed

    private void timetableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timetableButtonActionPerformed
        CardLayout cl = (CardLayout)(mainPanel.getLayout());// navigate to timetable panel
        cl.show(mainPanel, "timetable");
    }//GEN-LAST:event_timetableButtonActionPerformed

    private void loadLangButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadLangButtonActionPerformed
        String newLang = null;
        if (jRadioEnglish.isSelected()){ // gets the language to change to as a string
            newLang = "English";
        } else if(jRadioFrench.isSelected()){
            newLang = "French";
        } else if (jRadioGerman.isSelected()){
            newLang = "German";
        }
        if (newLang != null){
            try {
                loadLanguageFile(newLang); // if it found a language to change to, change to it
            } catch (IOException ex) {
                Logger.getLogger(StationTerminalForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        CardLayout cl = (CardLayout)(mainPanel.getLayout()); // go back home
        cl.show(mainPanel, "home");
        routes = controller.getRoutes(location, location);
        jListDestinations.setListData(routes.toArray());
    }//GEN-LAST:event_loadLangButtonActionPerformed

    private void resultsPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel2MouseClicked
        bookingDepartureDate.setText(rpanelDepart2.getText()); // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn2.getText());
        bookingPrice.setText(rpanelPrice2.getText());
        travelCost = Double.parseDouble(rpanelPrice2.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel2MouseClicked

    private void resultsPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel4MouseClicked
        bookingDepartureDate.setText(rpanelDepart4.getText()); // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn4.getText()); // passes state forward to next panel
        bookingPrice.setText(rpanelPrice4.getText());
        travelCost = Double.parseDouble(rpanelPrice4.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel4MouseClicked

    private void resultsPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel1MouseClicked
        bookingDepartureDate.setText(rpanelDepart1.getText()); // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn1.getText()); 
        bookingPrice.setText(rpanelPrice1.getText());
        travelCost = Double.parseDouble(rpanelPrice1.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel1MouseClicked

    private void resultsPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel3MouseClicked
        bookingDepartureDate.setText(rpanelDepart3.getText());  // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn3.getText());
        bookingPrice.setText(rpanelPrice3.getText());
        travelCost = Double.parseDouble(rpanelPrice3.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel3MouseClicked

    private void resultsPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel5MouseClicked
        bookingDepartureDate.setText(rpanelDepart5.getText());  // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn5.getText());
        bookingPrice.setText(rpanelPrice5.getText());
        travelCost = Double.parseDouble(rpanelPrice5.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel5MouseClicked

    private void resultsPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsPanel6MouseClicked
        bookingDepartureDate.setText(rpanelDepart6.getText()); // mimiced buttons for selecting a journey time/cost
        bookingReturnDate.setText(rpanelReturn6.getText()); 
        bookingPrice.setText(rpanelPrice6.getText());
        travelCost = Double.parseDouble(rpanelPrice6.getText().substring(1));
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "confirmBook");
        couponInvalidPanel.setVisible(false);
    }//GEN-LAST:event_resultsPanel6MouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        Date depDate = jDepartureDate.getDate();
        Date retDate;
        if (jReturnDate.isEnabled()){ // return date is disabled by defaul and is only enabled when "return" is selected
            retDate = jReturnDate.getDate();
        }else{
            retDate = null;
        }

        String ticketType = null;
        if (jRadioOneWay.isSelected()){ // default option
            ticketType = "One Way";
        } else if(jRadioReturn.isSelected()){
            ticketType = "Return";
        } else if (jRadioOpenReturn.isSelected()){
            ticketType = "Open Return";
        }
        
        boolean validTime = false;
        if(depHour.getText().matches("[0-9]+")){
            if(depMinute.getText().matches("[0-9]+")){ // checks that the time entered is a valid number
                if (ticketType.equals("Return")){
                    if(retHour.getText().matches("[0-9]+")){
                        if(retMinute.getText().matches("[0-9]+")){ // same again for return time
                            validTime = true;
                        }
                    }
                } else {
                    validTime = true;
                }
                
            }
        }
        if (ticketType != null & validTime == true){
        cashTicketType.setText(ticketType); // passes forward the state of the ticket
        cardTicketType.setText(ticketType);
        displayRoutesByDate(depDate, retDate); // gets the prices of the route at and after the dates passed, and displays them on the results buttons
        CardLayout cl = (CardLayout)(mainPanel.getLayout()); // change to search results
        cl.show(mainPanel, "searchResults");
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void couponTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_couponTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_couponTextFieldActionPerformed

    private void bookingAdvanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingAdvanceActionPerformed
        boolean couponValid = true;
        if (!couponTextField.getText().isEmpty()){ // if a coupon is entered
            double couponValue = usePromotionalCoupon(couponTextField.getText(),new Date(), routeToUse); // check against the known coupon as to its validity
            if (couponValue < 0) // valid coupons return a number between 0 and 1 to multiply the price by
            {
                couponValid = false; // prevent the screen from progressing
                couponInvalidPanel.setVisible(true); // display an error
            } else {
                travelCost = travelCost * couponValue;
            }
        }
        if(couponValid){
            DecimalFormat dec = new DecimalFormat("#0.00");
            if(radioCash.isSelected()){
                CardLayout cl = (CardLayout)(mainPanel.getLayout());
                cashDepartureDay.setText(bookingDepartureDate.getText());
                cashReturnDay.setText(bookingReturnDate.getText());
                cashPrice.setText("£" + dec.format(travelCost)); // pass forward the (potentialy reduced) price
                paymentDepartureDate.setText(bookingDepartureDate.getText());
                paymentReturnDate.setText(bookingReturnDate.getText());
                cl.show(mainPanel, "cash"); // navigate to the cash checkout
                couponInvalidPanel.setVisible(false); // hide the error message for if the panel is shown again
            } else if (radioCard.isSelected()){
                CardLayout cl = (CardLayout)(mainPanel.getLayout());
                cardDepartureDay.setText(bookingDepartureDate.getText());
                cardReturnDay.setText(bookingReturnDate.getText());
                cardPrice.setText("£" + dec.format(travelCost)); // pass forward the (potentialy reduced) price
                paymentDepartureDate.setText(bookingDepartureDate.getText());
                paymentReturnDate.setText(bookingReturnDate.getText());
                cl.show(mainPanel, "card");// navigate to the card checkout
                couponInvalidPanel.setVisible(false);
            }
        }
    }//GEN-LAST:event_bookingAdvanceActionPerformed

    private void cardSecurityCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardSecurityCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardSecurityCodeActionPerformed

    private void cardConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardConfirmButtonActionPerformed
        if(!cardName.getText().isEmpty() & !cardNumber.getText().isEmpty() & !cardSecurityCode.getText().isEmpty()){
            if(cardPrice.getText().substring(1).matches("[0-9.]+")){ // if a valid price has been passed forward
            Purchase purchase = new Purchase();
            boolean purchaseSuccess = purchase.makePurchase(cardName.getText(), cardNumber.getText(), Integer.parseInt(cardSecurityCode.getText()), 0,
                                    Double.parseDouble(cardPrice.getText().substring(1))); // attempt to make a purchase using the details provided
            if (purchaseSuccess){ // if it was sucessful
                CardLayout cl = (CardLayout)(mainPanel.getLayout());
                cl.show(mainPanel, "paySucc");// navigate to the final panel
                }
            } 
        } else {
                JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Please fill all fields.");
        }
    }//GEN-LAST:event_cardConfirmButtonActionPerformed

    private void homeSelectDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeSelectDestinationActionPerformed
        if(jListVia.getSelectedValue() != null){
        Location newDestination = (Location)jListVia.getSelectedValue();
        routeToUse = (Route)jListDestinations.getSelectedValue();
        String destName = newDestination.getName();
        String locName = location.getName();
        destinationLabel.setText(locName + " - " + destName);
        bookingStation.setText(locName + " - " + destName);
        cardStation.setText(locName + " - " + destName);
        cashStation.setText(locName + " - " + destName);
        paymentStation.setText(locName + " - " + destName);
        
        rpanelDestination2.setText(destName);
        rpanelDestination4.setText(destName);
        rpanelDestination1.setText(destName);
        rpanelDestination3.setText(destName);
        rpanelDestination5.setText(destName);
        rpanelDestination6.setText(destName);
        
        resultsPanel1.setVisible(true);
        resultsPanel2.setVisible(true);
        resultsPanel3.setVisible(true);
        resultsPanel4.setVisible(true);
        resultsPanel5.setVisible(true);
        resultsPanel6.setVisible(true);
        
        jDepartureDate.setDate(new Date());
        Calendar calendar = Calendar.getInstance(); // round the departure date UP to the nearest 30 mins
        calendar.setTime(new Date());
        depHour.setText(Integer.toString(calendar.get(Calendar.HOUR)));
        retHour.setText(Integer.toString(calendar.get(Calendar.HOUR)));
        depMinute.setText(Integer.toString(calendar.get(Calendar.MINUTE)));
        retMinute.setText(Integer.toString(calendar.get(Calendar.MINUTE)));
        
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "search");
        }
    }//GEN-LAST:event_homeSelectDestinationActionPerformed

    private void jRadioReturnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioReturnStateChanged
        if(jRadioReturn.isSelected()){
            jReturnDate.setEnabled(true);
            retHour.setEnabled(true);
            retMinute.setEnabled(true);
        } else {
            jReturnDate.setEnabled(false);
            retHour.setEnabled(false);
            retMinute.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioReturnStateChanged

    private void printTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printTicketButtonActionPerformed
        CardLayout cl = (CardLayout)(mainPanel.getLayout());
        cl.show(mainPanel, "home");
        printReciept();
        routes = controller.getRoutes(location, location);
        jListDestinations.setListData(routes.toArray());
    }//GEN-LAST:event_printTicketButtonActionPerformed

    private void cashReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashReturnButtonActionPerformed
        refundCash();
    }//GEN-LAST:event_cashReturnButtonActionPerformed

    private void jListViaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListViaValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListViaValueChanged

    private void jListDestinationsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDestinationsValueChanged
        // When a destination is selected:
        Route route = (Route)jListDestinations.getSelectedValue();
        List<Location> locs = route.getDestinations().getLocationList();
        List<Location> newLocs = new ArrayList<>();
        boolean homeFound = false;
        Iterator<Location> litr = locs.iterator();
        while (litr.hasNext()){
            Location l = litr.next();
            if (homeFound == true){
                newLocs.add(l);
            }
            if (l.getID().equals("1"))
            {
                homeFound = true;
            }
        }
        jListVia.setListData(newLocs.toArray());
    }//GEN-LAST:event_jListDestinationsValueChanged

    private void jRadioReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioReturnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioReturnActionPerformed

    private void cashFivePoundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashFivePoundsActionPerformed
        enterCash(5);
        cashInserted.setText(Double.toString(credits));
        if (credits >= travelCost)
        {
            if (credits != travelCost)
            {
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                JOptionPane.showMessageDialog(frame, "Refunded £" + (credits - travelCost) + " in change", "Change", JOptionPane.PLAIN_MESSAGE);
                credits = 0;
            }
            CardLayout cl = (CardLayout)(mainPanel.getLayout());
            cl.show(mainPanel, "paySucc");
        }
    }//GEN-LAST:event_cashFivePoundsActionPerformed

    private void cashTwoPoundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashTwoPoundsActionPerformed
        enterCash(2);
        cashInserted.setText(Double.toString(credits));
        if (credits >= travelCost)
        {
            if (credits != travelCost)
            {
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                JOptionPane.showMessageDialog(frame, "Refunded £" + (credits - travelCost) + " in change", "Change", JOptionPane.PLAIN_MESSAGE);
                credits = 0;
            }
            CardLayout cl = (CardLayout)(mainPanel.getLayout());
            cl.show(mainPanel, "paySucc");
        }
    }//GEN-LAST:event_cashTwoPoundsActionPerformed

    private void cashOnePoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashOnePoundActionPerformed
        enterCash(1);
        cashInserted.setText(Double.toString(credits));
        if (credits >= travelCost)
        {
            if (credits != travelCost)
            {
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                DecimalFormat dec = new DecimalFormat("#0.00");
                JOptionPane.showMessageDialog(frame, "Refunded " + dec.format(credits - travelCost) + " in change", "Change", JOptionPane.PLAIN_MESSAGE);
                credits = 0;
            }
            CardLayout cl = (CardLayout)(mainPanel.getLayout());
            cl.show(mainPanel, "paySucc");
        }
    }//GEN-LAST:event_cashOnePoundActionPerformed

    private void cashFiftyPenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashFiftyPenceActionPerformed
        enterCash(0.5);
        cashInserted.setText(Double.toString(credits));
        if (credits >= travelCost)
        {
            if (credits != travelCost)
            {
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                DecimalFormat dec = new DecimalFormat("#0.00");
                JOptionPane.showMessageDialog(frame, "Refunded " + dec.format(credits - travelCost) + " in change", "Change", JOptionPane.PLAIN_MESSAGE);
                credits = 0;
            }
            CardLayout cl = (CardLayout)(mainPanel.getLayout());
            cl.show(mainPanel, "paySucc");
        }
    }//GEN-LAST:event_cashFiftyPenceActionPerformed
    
    public void loadLanguageFile(String lang) throws IOException{
    language = lang;
    String line = null;
    String fileName = "Station" + language + ".txt";
    try {
    FileReader fileReader = new FileReader(fileName);
        // Home Button
        try (BufferedReader bufferedReader = new BufferedReader(fileReader)) {
            line = bufferedReader.readLine();
            // Home Button
            homeLabel.setText(line);
            line = bufferedReader.readLine();
            // language button
            languageButton.setText(line);
            line = bufferedReader.readLine();
            // timetable button
            timetableButton.setText(line);
            line = bufferedReader.readLine();
            // "Available Routes"
            homeAvailRoutes.setText(line);
            line = bufferedReader.readLine();
            // "Stops at:"
            homeStopsAt.setText(line);
            line = bufferedReader.readLine();
            // welcome message
            homeSheff1.setText(line);
            line = bufferedReader.readLine();
            // select a stop
            homeSheff2.setText(line);
            line = bufferedReader.readLine();
            // Select destination button
            homeSelectDestination.setText(line);
        }
    
    JFrame frame = new JFrame("Language Changed");
    JOptionPane.showMessageDialog(frame,"Language is now " + language + ", okay?");
      } catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
    }
    
    public void displayTimeTables(RouteRegistry routes){
        //too much?
    }
    
    public void displayRoutesByDate(Date departureDate, Date returnDate){
        if(departureDate != null){
            List<JLabel> depDates = new ArrayList<>(); // arraylist of labels for the departure date on the search results panel
            depDates.add(rpanelDepart1);
            depDates.add(rpanelDepart2);
            depDates.add(rpanelDepart3);
            depDates.add(rpanelDepart4);
            depDates.add(rpanelDepart5);
            depDates.add(rpanelDepart6);
            List<JLabel> retDates = new ArrayList<>(); // arraylist of labels for the return date on the search results panel
            retDates.add(rpanelReturn1);
            retDates.add(rpanelReturn2);
            retDates.add(rpanelReturn3);
            retDates.add(rpanelReturn4);
            retDates.add(rpanelReturn5);
            retDates.add(rpanelReturn6);
            List<JLabel> prices = new ArrayList<>(); // arraylist of labels for the prices on the search results panel
            prices.add(rpanelPrice1);
            prices.add(rpanelPrice2);
            prices.add(rpanelPrice3);
            prices.add(rpanelPrice4);
            prices.add(rpanelPrice5);
            prices.add(rpanelPrice6);
            List<JPanel> panels = new ArrayList<>();// arraylist of panels on the search results panel (to be hidden in case of an invalid journey)
            panels.add(resultsPanel1);
            panels.add(resultsPanel2);
            panels.add(resultsPanel3);
            panels.add(resultsPanel4);
            panels.add(resultsPanel5);
            panels.add(resultsPanel6);
        
            DecimalFormat dec = new DecimalFormat("#0.00");

            if (returnDate == null){ // if the isn't a return date passed in (i.e. not a return ticked)
                ArrayList<PotentialJourney> journs = new ArrayList<>();
                for (int i = 0; i < 6; i++){
                    Date depDate = new Date(); //get the current date
                    Date retDate = new Date(Long.MAX_VALUE); // get max date - will never return
                    
                    int baseTime = (Integer.parseInt(depHour.getText()) * 3600000) + ((Integer.parseInt(depMinute.getText()) - 1) * 60000);
                    depDate.setTime(departureDate.getTime() + baseTime  + (i * 1800000));

                    Calendar calendar = Calendar.getInstance(); // round the departure date UP to the nearest 30 mins
                    calendar.setTime(depDate);
                    int unroundedMinutes = calendar.get(Calendar.MINUTE);
                    int mod = unroundedMinutes % 30;
                    calendar.set(Calendar.MINUTE, unroundedMinutes + (30 - mod));
                    calendar.set(Calendar.SECOND, 0);
                    calendar.set(Calendar.MILLISECOND, 0);
                    
                    depDate.setTime(calendar.getTimeInMillis());
                    
                    PotentialJourney newJourney = new PotentialJourney(routeToUse,location,destination,depDate,retDate); // create a journey to check
                    journs.add(newJourney); // add it to the list
                    String dep = new SimpleDateFormat("MMM d ', 'HH:mm").format(depDate);
                    depDates.get(i).setText("Depart: " + dep);
                    retDates.get(i).setText(cardTicketType.getText()); // set text on the results screen
                }
                //ArrayList<Double> costs = fares.getRouteCosts(journs); // get the costs
                ArrayList<Double> costs = new ArrayList<>();
                double[] cs = {1,2,3,4,5,6};
                costs.add(cs[0]);
                costs.add(cs[1]);
                costs.add(cs[2]);
                costs.add(cs[3]);
                costs.add(cs[4]);
                costs.add(cs[5]);
                
                for (int i = 0; i < 6; i++){
                    if (costs.get(i) != null) // if it's a valid journey
                    {
                    prices.get(i).setText("£" + dec.format(costs.get(i))); // add the cost to the results
                    } else {
                        panels.get(i).setVisible(false);
                        panels.get(i).setEnabled(false); // else make the results panel invisible and disabled
                    }
                }
            //set prices on screen
            } else {
                ArrayList<PotentialJourney> journs = new ArrayList<>();
                Date retDate = new Date();
                int baseRetTime = (Integer.parseInt(retHour.getText()) * 3600000) + (Integer.parseInt(retMinute.getText()) * 60000);
                retDate.setTime(returnDate.getTime() + baseRetTime);
                
                Calendar calendar = Calendar.getInstance(); // round the return date UP to the nearest 30 mins
                calendar.setTime(retDate);
                int unroundedMinutes = calendar.get(Calendar.MINUTE); 
                int mod = unroundedMinutes % 30;
                calendar.set(Calendar.MINUTE, unroundedMinutes + (30 - mod));
                calendar.set(Calendar.SECOND, 0);
                calendar.set(Calendar.MILLISECOND, 0);
                
                retDate.setTime(calendar.getTimeInMillis());
                
                for (int i = 0; i < 6; i++){
                    Date depDate = new Date(); // same as above - this time return is not irrelevant so it is kept

                    int baseDepTime = (Integer.parseInt(depHour.getText()) * 3600000) + (Integer.parseInt(depMinute.getText()) * 60000);
                    depDate.setTime(departureDate.getTime() + baseDepTime  + (i * 1800000)); // add i * (30 minutes) to the date

                    calendar = Calendar.getInstance(); // round the departure date UP to the nearest 30 mins
                    calendar.setTime(depDate);
                    unroundedMinutes = calendar.get(Calendar.MINUTE);
                    mod = unroundedMinutes % 30;
                    calendar.set(Calendar.MINUTE, unroundedMinutes + (30 - mod));
                    calendar.set(Calendar.SECOND, 0);
                    calendar.set(Calendar.MILLISECOND, 0);
                    
                    depDate.setTime(calendar.getTimeInMillis());
                    
                    PotentialJourney newJourney = new PotentialJourney(routeToUse,location,destination,depDate,retDate); // create a new journey to check
                    journs.add(newJourney);
                    String dep = new SimpleDateFormat("MMM d ', 'HH:mm").format(depDate);
                    String ret = new SimpleDateFormat("MMM d ', 'HH:mm").format(retDate);
                    depDates.get(i).setText("Depart: " + dep);
                    retDates.get(i).setText("Return: " + ret);
                }
                ArrayList<Double> costs = fares.getRouteCosts(journs);
                for (int i = 0; i < 6; i++){
                    if (costs.get(i) != null) // if it's a valid journey
                    {
                        prices.get(i).setText("£" + dec.format(costs.get(i))); // add the cost to the results
                    } else {
                        panels.get(i).setVisible(false);
                        panels.get(i).setEnabled(false); // else make the results panel invisible and disabled
                    }
                }
            }
        }
    }
    
    public double usePromotionalCoupon(String couponName, Date useDate, Route useRoute){
        if (couponName.equals(coupon.getID())){ // check if the code passed is valid
            return coupon.useCoupon(useDate, useRoute);
        }
        return -3; // invalid coupon code, -2 = invalid route, -1 = coupon already used
    }
    
    public boolean isCashEnteredSufficient(int cashTally, int newCash){
        return ((cashTally+newCash) == travelCost);
    }
    
    public void printReciept(){
        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JOptionPane.showMessageDialog(frame,
        paymentStation.getText() + "\n"
        + paymentDepartureDate.getText() + "\n"
        + paymentReturnDate.getText() + "\n"
        + cashTicketType.getText() + "\n"
        + bookingPrice.getText() + "\n", "Reciept", JOptionPane.PLAIN_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StationTerminalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StationTerminalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StationTerminalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StationTerminalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StationTerminalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookingAdvance;
    private javax.swing.JLabel bookingDepartureDate;
    private javax.swing.JLabel bookingPrice;
    private javax.swing.JLabel bookingReturnDate;
    private javax.swing.JLabel bookingStation;
    private javax.swing.JButton cardConfirmButton;
    private javax.swing.JLabel cardDepartureDay;
    private javax.swing.JTextField cardName;
    private javax.swing.JTextField cardNumber;
    private javax.swing.JPanel cardPaymentPanel;
    private javax.swing.JLabel cardPrice;
    private javax.swing.JLabel cardReturnDay;
    private javax.swing.JTextField cardSecurityCode;
    private javax.swing.JLabel cardStation;
    private javax.swing.JLabel cardTicketType;
    private javax.swing.JLabel cashDepartureDay;
    private javax.swing.JButton cashFiftyPence;
    private javax.swing.JButton cashFivePounds;
    private javax.swing.JLabel cashInserted;
    private javax.swing.JButton cashOnePound;
    private javax.swing.JPanel cashPaymentPanel;
    private javax.swing.JLabel cashPrice;
    private javax.swing.JButton cashReturnButton;
    private javax.swing.JLabel cashReturnDay;
    private javax.swing.JLabel cashStation;
    private javax.swing.JLabel cashTicketType;
    private javax.swing.JButton cashTwoPounds;
    private javax.swing.JPanel confirmBookingPanel;
    private javax.swing.JLabel confirmTicketType;
    private javax.swing.JPanel couponInvalidPanel;
    private javax.swing.JTextField couponTextField;
    private javax.swing.JTextField depHour;
    private javax.swing.JTextField depMinute;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JPanel destinationPanel;
    private javax.swing.JScrollPane destinationScrollPane;
    private javax.swing.JTextPane destinationTextPane;
    private javax.swing.JPanel duePanel;
    private javax.swing.JScrollPane dueScrollPane;
    private javax.swing.JTextPane dueTextPane;
    private javax.swing.JButton exampleViewButton;
    private javax.swing.JPanel expecedPanel;
    private javax.swing.JScrollPane expectedScrollPane;
    private javax.swing.JTextPane expectedTextPane;
    private javax.swing.JLabel homeAvailRoutes;
    private javax.swing.JPanel homeButtonPanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JButton homeSelectDestination;
    private javax.swing.JLabel homeSheff1;
    private javax.swing.JLabel homeSheff2;
    private javax.swing.JLabel homeStopsAt;
    private javax.swing.JButton jButton1;
    private org.jdesktop.swingx.JXDatePicker jDepartureDate;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JList jListDestinations;
    private javax.swing.JList jListVia;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioEnglish;
    private javax.swing.JRadioButton jRadioFrench;
    private javax.swing.JRadioButton jRadioGerman;
    private javax.swing.JRadioButton jRadioOneWay;
    private javax.swing.JRadioButton jRadioOpenReturn;
    private javax.swing.JRadioButton jRadioReturn;
    private org.jdesktop.swingx.JXDatePicker jReturnDate;
    private javax.swing.JScrollPane jScrollDestinations;
    private javax.swing.JScrollPane jScrollVia;
    private javax.swing.JButton languageButton;
    private javax.swing.JPanel languagePanel;
    private javax.swing.JButton loadLangButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JLabel paymentDepartureDate;
    private javax.swing.JLabel paymentReturnDate;
    private javax.swing.JLabel paymentStation;
    private javax.swing.JPanel paymentSuccesfulPanel;
    private javax.swing.JPanel platformPanel;
    private javax.swing.JScrollPane platformScrollPane;
    private javax.swing.JTextPane platformTextPane;
    private javax.swing.JButton printTicketButton;
    private javax.swing.JRadioButton radioCard;
    private javax.swing.JRadioButton radioCash;
    private javax.swing.JPanel resultsPanel1;
    private javax.swing.JPanel resultsPanel2;
    private javax.swing.JPanel resultsPanel3;
    private javax.swing.JPanel resultsPanel4;
    private javax.swing.JPanel resultsPanel5;
    private javax.swing.JPanel resultsPanel6;
    private javax.swing.JTextField retHour;
    private javax.swing.JTextField retMinute;
    private javax.swing.JLabel rpanelDepart1;
    private javax.swing.JLabel rpanelDepart2;
    private javax.swing.JLabel rpanelDepart3;
    private javax.swing.JLabel rpanelDepart4;
    private javax.swing.JLabel rpanelDepart5;
    private javax.swing.JLabel rpanelDepart6;
    private javax.swing.JLabel rpanelDestination1;
    private javax.swing.JLabel rpanelDestination2;
    private javax.swing.JLabel rpanelDestination3;
    private javax.swing.JLabel rpanelDestination4;
    private javax.swing.JLabel rpanelDestination5;
    private javax.swing.JLabel rpanelDestination6;
    private javax.swing.JLabel rpanelPrice1;
    private javax.swing.JLabel rpanelPrice2;
    private javax.swing.JLabel rpanelPrice3;
    private javax.swing.JLabel rpanelPrice4;
    private javax.swing.JLabel rpanelPrice5;
    private javax.swing.JLabel rpanelPrice6;
    private javax.swing.JLabel rpanelReturn1;
    private javax.swing.JLabel rpanelReturn2;
    private javax.swing.JLabel rpanelReturn3;
    private javax.swing.JLabel rpanelReturn4;
    private javax.swing.JLabel rpanelReturn5;
    private javax.swing.JLabel rpanelReturn6;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel searchResultsPanel;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel timePanel;
    private javax.swing.JButton timetableButton;
    private javax.swing.JPanel timetablePanel;
    private javax.swing.JPanel viewTicketsPanel;
    // End of variables declaration//GEN-END:variables
}
